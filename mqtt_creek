#!/usr/bin/env python

# Run on startup with: 
#   /etc/init.d/creek.sh
#   sudo service creek.sh restart


import time, sys
import paho.mqtt.client as mqtt
import RPi.GPIO as GPIO

FLOW_SENSOR = 23

GPIO.setmode(GPIO.BCM)
GPIO.setup(FLOW_SENSOR, GPIO.IN, pull_up_down = GPIO.PUD_UP)

RELAYS = [[06, 13], [19, 26], [12, 16], [20, 21]]

for i in [0,1,2,3]:
    for j in [0,1]:
        r = RELAYS[i][j]
    	print 'creek setup relay on IO ' + str(i) + str(j) + str(r)
        GPIO.setup (r, GPIO.OUT)
        GPIO.output(r, GPIO.HIGH)

global flow_count
flow_count = 0

def on_connect(mqttc, obj, flags, rc):
    print("creek connect rc: "+str(rc))
    mqttc.subscribe("+/+/+")

def on_message(mqttc, obj, msg):
    print "creek message: " + msg.topic + " = " + msg.payload
#   print("creek message qos=",msg.qos)
#   print("creek message retain flag=",msg.retain)
    if msg.topic == "creek/valve/1":
        valve_control(1, msg.payload)
    if msg.topic == "creek/valve/2":
        valve_control(2, msg.payload)
    if msg.topic == "creek/valve/3":
        valve_control(3, msg.payload)
    if msg.topic == "creek/valve/4":
        valve_control(4, msg.payload)
    

def on_publish(mqttc, obj, mid):
    print("creek Publish mid: "+str(mid))

def on_subscribe(mqttc, obj, mid, granted_qos):
    print("creek Subscribed: "+str(mid)+" "+str(granted_qos))

def on_log(mqttc, obj, level, string):
    print(string)

def countPulse(channel):
   global flow_count
   flow_count = flow_count + 1
   print flow_count


def valve_control(valve, state):
    ro = RELAYS[valve-1][0]
    rc = RELAYS[valve-1][1]
    t  = 5
    print "creek Changing valve:" + str(valve) + state + str(ro) + str(rc)
	
    if state == "open":
        r = ro
    elif state == "close":
        r = rc
    else:
        t = float(state) / 10
        r = ro
        if t < 0:
            r = rc
            t = -t

    print " relay: " + str(r) + " time: " + str(t)
    GPIO.output(r, GPIO.LOW)
    time.sleep(t);
    GPIO.output(r, GPIO.HIGH)

GPIO.add_event_detect(FLOW_SENSOR, GPIO.FALLING, callback=countPulse)


print 'creek mqtt setup'
mqttc = mqtt.Client()
mqttc.on_message   = on_message
mqttc.on_connect   = on_connect
mqttc.on_publish   = on_publish
mqttc.on_subscribe = on_subscribe


print 'creek mqtt connect'
mqttc.connect("192.168.86.150")


print 'creek loop forever'
#mqttc.loop_forever()
mqttc.loop_start()

while(1):
    time.sleep(10)
    print flow_count
    if flow_count > 0:
        mqttc.publish("creek/flow", flow_count)
    flow_count = 0

    
print '\ncreek caught keyboard interrupt!, bye'
GPIO.cleanup()
sys.exit()
